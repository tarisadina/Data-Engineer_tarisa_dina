1. Jelaskan perbedaan antara data terstruktur dan data tidak terstruktur. Berikan contoh untuk masing-masing dan bahas bagaimana mereka biasanya disimpan dan diproses.
   -Data terstruktur merupakan data yang memiliki model, format, dan skema. Selain itu, contoh dari data terstruktur yaitu alamat, nama, dan kode pos. Data terstruktur ini biasanya disimpan di database relasional atau biasa di sebut RDBMS yang memiliki kepanjangan Relasional DataBase Manajeman System, biasanya disimpan dalam format tabel atau struktur data yang terorganisir, seperti database relasional.
    Cara penyimpanan dan pemrosesan data terstruktur melibatkan penggunaan basis data relasional atau struktur data terorganisir lainnya. Data disimpan dalam tabel yang memiliki kolom dan baris, dan dapat diakses dan diproses menggunakan bahasa kueri seperti SQL.
    Pada data terstruktur ini mudah dicari pada SQL(Structured Query Language), data ini termasuk 20% dari data perusahaan dan membutuhkan penyimpanan yang cukup sedikit dibanding yang lain.
    Penyimpanan kita perlu oprasikan create table, select data, update data, serta delete data pada SQL.    
   -Data tidak terstruktur merupakan yang memiliki struktur internal namun datanya tidak terstruktur melalui model dan skema. Pada dasarnya model dan skema sangat penting ditentukan diawal, contohnya seperti email, PDF, DOC, gambar, audio, dan vidio. Selain itu, sosial media juga termasuk yaitu pada data twitter, facebook, dan instagram. 
    Cara penyimpanan dan pemrosesan data tidak terstruktur melibatkan penggunaan teknologi seperti penyimpanan blob (binary large object) dalam basis data NoSQL atau penyimpanan file storage. Pemrosesan data tidak terstruktur sering melibatkan teknik seperti analisis teks, pengenalan pola, atau deep learning untuk mengekstrak informasi yang bermanfaat dari data tersebut.
    Data ini termasuk 80% dari data perusahaan dan membutuhkan penyimpanan yang banyak. (one.alterra)

2. Apa itu basis data relasional dan bagaimana cara kerjanya? Berikan contoh penggunaannya dalam dunia nyata.
   -BSistem manajemen basis data relasional (RDBMS) adalah lapisan perangkat lunak yang mengelola tabel relasional. RDBMS menyediakan antarmuka konsisten antara aplikasi, pengguna, dan basis data. Organisasi menggunakan RDBMS untuk mengelola informasi bisnis dari berbagai departemen. Pengguna dapat bekerja dengan basis data yang sama dengan cara yang berbeda, mengumpulkan data tanpa redundansi. 
    RDBMS juga memberikan kontrol akses yang lebih besar kepada administrator basis data atas data.(https://aws.amazon.com/id/relational-database/ )
   -Cara kerjanya yaitu dengan Data disimpan dalam tabel yang memiliki baris dan kolom. Setiap tabel memiliki kunci utama (primary key) yang unik untuk mengidentifikasi setiap baris secara unik. Relasi antara tabel-tabel didefinisikan melalui kunci asing (foreign key), yang menghubungkan kunci utama di satu tabel dengan kolom di tabel lain.
    SQL digunakan untuk menjalankan operasi seperti SELECT (pengambilan data), INSERT (penyisipan data), UPDATE (perubahan data), dan DELETE (penghapusan data). Contoh penggunaan basis data relasional dalam dunia nyata termasuk pada sistem manajemen basis data (DBMS) seperti MySQL, PostgreSQL, Microsoft SQL Server, dan Oracle Database. 
    Serta, Aplikasi e-commerce yang menyimpan informasi produk, pembeli, dan pesanan dalam basis data relasional.

3. Jelaskan konsep normalisasi basis data dan mengapa hal ini penting dalam konteks basis data relasional.
   -Normalisasi merupakan sebuah teknik logical desain dalam sebuah basis data yang mengelompokkan atribut dari berbagai entitas dalam suatu relasi sehingga membentuk struktur relasi yang baik (tanpa redudansi/pengulangan data) serta sebagian besar ambiguity bisa dihilangkan.
    Ada beberapa tingkatan normalisasi, mulai dari bentuk yang paling rendah (normalisasi tingkat pertama) hingga bentuk yang paling tinggi (normalisasi tingkat kelima). Setiap tingkat normalisasi memiliki aturan dan kriteria khusus yang harus dipenuhi, seperti eliminasi redundansi data, identifikasi kunci utama (primary key) dan kunci asing (foreign key), dan menghindari dependensi fungsional yang tidak diinginkan.
    (https://www.jojonomic.com/blog/normalisasi-database/ )