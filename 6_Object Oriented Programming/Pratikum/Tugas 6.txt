Soal Prioritas 1 

Sistem untuk mengelola aktivitas di sebuah pusat kebugaran, termasuk pelanggan, pelatih, dan berbagai kelas latihan.
1.	Desain Kelas Pelanggan:
•	Buat kelas Pelanggan dengan atribut privat seperti nama, usia, dan ID pelanggan.
•	Implementasikan metode get dan set untuk setiap atribut (Encapsulation).
•	Tambahkan metode tampilkanInfo() untuk menampilkan informasi pelanggan (Data Abstraction).
2.	Desain Kelas Pelatih:
•	Buat kelas Pelatih dengan atribut privat seperti nama, spesialisasi, dan tahun pengalaman.
•	Implementasikan metode get dan set serta tampilkanInfo() (Encapsulation dan Data Abstraction).
3.	Desain Kelas KelasLatihan:
•	Buat kelas KelasLatihan yang mewarisi dari kelas Pelatih dan menambahkan atribut seperti jenis latihan dan jadwal (Inheritance).
•	Override metode tampilkanInfo() untuk menampilkan informasi tambahan (Polymorphism).
4.	Demonstrasi:
•	Buat objek Pelanggan dan Pelatih, serta beberapa objek KelasLatihan.
•	Tampilkan informasi setiap objek menggunakan metode tampilkanInfo().


Soal Prioritas 2 

Memperluas sistem manajemen pusat kebugaran dengan menambahkan fitur khusus untuk berbagai jenis kelas latihan, seperti Yoga dan Angkat Beban, dengan fokus pada detail lanjutan dari inheritance dan polymorphism.

1.	Desain Kelas Turunan Lanjutan:
•	Buat kelas Yoga dan AngkatBeban yang mewarisi dari KelasLatihan.
•	Tambahkan atribut dan metode khusus untuk setiap kelas. Misalnya, Yoga mungkin memiliki atribut seperti tingkatKesulitan dan AngkatBeban mungkin memiliki beratMaksimum.
2.	Implementasi Polymorphism:
•	Modifikasi metode tampilkanInfo() di Yoga dan AngkatBeban untuk menampilkan informasi spesifik kelas tersebut.
•	Demonstrasi penggunaan polymorphism dengan membuat array KelasLatihan yang berisi objek Yoga dan AngkatBeban, dan menampilkan informasi mereka menggunakan metode tampilkanInfo() yang telah di-modifikasi.
3.	Desain Metode Khusus:
•	Implementasikan metode khusus dalam Yoga dan AngkatBeban, seperti aturPosisiYoga() untuk Yoga dan aturBeratBeban() untuk AngkatBeban.
•	Demonstrasi bagaimana metode ini digunakan dalam konteks objek masing-masing.
4.	Demonstrasi Polymorphism Lanjutan:
•	Buat fungsi yang menerima objek KelasLatihan dan memanggil metode khusus berdasarkan tipe kelasnya. Gunakan isinstance() untuk menentukan tipe kelas dan memanggil metode yang sesuai.

